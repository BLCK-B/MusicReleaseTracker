plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id "org.openjfx.javafxplugin" version "0.0.14"
    id 'org.beryx.jlink' version '2.25.0'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'com.blck'
version '1.0.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

configurations {
    runtime
    compile
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.blck.musictrackergradle'
    mainClass = 'com.blck.musictrackergradle.Main'
}

javafx {
    version = '19'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.xerial:sqlite-jdbc:3.40.1.0')
    implementation 'org.jsoup:jsoup:1.15.4'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'MusicTrackerGradle'
    }
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

//This will create an executable JAR file with a manifest that specifies the main class
tasks.jar {
    manifest {
        attributes 'Main-Class': 'com.blck.musictrackergradle.Main'
    }
    duplicatesStrategy = 'EXCLUDE'
    from(sourceSets.main.output) {
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    }
    archiveFileName = "MusicTrackerGradle.jar"
    dependsOn configurations.runtimeClasspath
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath, project.configurations.shadow]
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'com.blck.musictrackergradle.Main'
    }
    mergeServiceFiles()
}

run {
    systemProperty "ide.environment", "IDE"
}