/*
 *         MusicReleaseTracker
 *         Copyright (C) 2023 - 2024 BLCK
 *         This program is free software: you can redistribute it and/or modify
 *         it under the terms of the GNU General Public License as published by
 *         the Free Software Foundation, either version 3 of the License, or
 *         (at your option) any later version.
 *         This program is distributed in the hope that it will be useful,
 *         but WITHOUT ANY WARRANTY; without even the implied warranty of
 *         MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *         GNU General Public License for more details.
 *         You should have received a copy of the GNU General Public License
 *         along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// https://services.gradle.org/distributions - in gradle-wrapper.properties

// TODO: build/resources/aot/META-INF/native-image tracing CI integration or git

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.graalvm.buildtools.native' version '0.10.2'
}

group 'com.blck'
def applicationProperties = file('src/main/resources/application.properties')
def properties = new Properties()
applicationProperties.withInputStream { stream ->
    properties.load(stream)
}
version = properties.getProperty('app.version')

repositories {
    mavenCentral()
    gradlePluginPortal()
}

graalvmNative {
    binaries.all {
            imageName.set("MusicReleaseTracker")
            buildArgs.add('--verbose')
            // sqlite
            buildArgs.add('--initialize-at-build-time=org.sqlite.util.ProcessRunner')
            // quick build
//            buildArgs.add('-Ob')
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

dependencies {
    implementation 'org.xerial:sqlite-jdbc:3.46.0.1'
    implementation 'org.jsoup:jsoup:1.18.1'

    testImplementation(platform('org.junit:junit-bom:5.11.0'))
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.3'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootJar {
    duplicatesStrategy = 'exclude'
    archiveFileName = "MRT-${version}-linux-mac.jar"
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

tasks.jar {
    manifest {
        attributes 'Main-Class': 'com.blck.MusicReleaseTracker.Main'
    }
    duplicatesStrategy = 'exclude'
    from(sourceSets.main.output) {
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    }
    dependsOn configurations.runtimeClasspath
}

test {
    useJUnitPlatform()
    jvmArgs("-XX:+EnableDynamicAgentLoading")
}

