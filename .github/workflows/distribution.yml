name: distribution

on:
  workflow_dispatch:
    inputs:
      proceed:
        description: 'Build native executables and package with electron-builder? yes/no'
        required: true
        default: 'no'
env:
  JAVA_VERSION: '22'

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: current
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
    - name: Build bootJar
      run: ./gradlew bootJar
    - name: Upload jar
      uses: actions/upload-artifact@v4
      with:
        name: MRT.jar
        path: build/libs/MRT-*.jar
        overwrite: true
        
  native-and-electron:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.proceed == 'yes' }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Node.js and npm
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
        cache-dependency-path: 'vue/package-lock.json'
    - run: npm ci
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
    - name: Build native executable
      run: ./gradlew nativeCompile
    - name: Move native executable
      run: mv build/native/nativeCompile/MusicReleaseTracker* vue/buildResources/
    - name: Electron builder
      run: |
        cd vue
        npm run distInstaller
    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: installer
        path: vue/distribution/MRT-*.*
        if-no-files-found: error
        overwrite: true
