// https://services.gradle.org/distributions - in gradle-wrapper.properties

plugins {
    id 'java'
    id 'application'
    // https://plugins.gradle.org/plugin/org.beryx.jlink
    id("org.beryx.jlink") version "3.0.1"
    // https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow
    id "com.github.johnrengelman.shadow" version "8.1.1"
    // https://plugins.gradle.org/plugin/org.springframework.boot
    id("org.springframework.boot") version "3.2.1"
    // https://plugins.gradle.org/plugin/io.spring.dependency-management
    id("io.spring.dependency-management") version "1.1.4"
    // https://graalvm.github.io/native-build-tools/latest/gradle-plugin.html#_adding_the_plugin
    id 'org.graalvm.buildtools.native' version '0.10.0'
}

group 'com.blck'
version '8.1'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

configurations {
    runtime
    compile
}

graalvmNative {
    binaries {
        main {
            imageName.set("MusicReleaseTracker")
            buildArgs.add('--verbose')
        }
    }
}

java {
    // minimal supported
    sourceCompatibility = JavaVersion.VERSION_19
    // target
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.blck.MusicReleaseTracker'
    mainClass = 'com.blck.MusicReleaseTracker.Main'
}

dependencies {
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.17.2'
    // https://mvnrepository.com/artifact/com.typesafe/config
    implementation 'com.typesafe:config:1.4.3'

    // https://mvnrepository.com/artifact/org.junit/junit-bom
    testImplementation(platform("org.junit:junit-bom:5.10.1"))
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootDistZip {
    dependsOn shadowJar
}
bootDistTar {
    dependsOn shadowJar
}
bootStartScripts {
    dependsOn shadowJar
}
tasks.startShadowScripts.dependsOn(tasks.bootJar)
bootJar {
    duplicatesStrategy = 'exclude'
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'MusicReleaseTracker'
    }
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

// this will create an executable JAR file with a manifest that specifies the main class
tasks.jar {
    manifest {
        attributes 'Main-Class': 'com.blck.MusicReleaseTracker.Main'
    }
    duplicatesStrategy = 'EXCLUDE'
    from(sourceSets.main.output) {
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    }
    archiveFileName = "MusicReleaseTracker.jar"
    dependsOn configurations.runtimeClasspath
}

shadowJar {
    exclude 'org/sqlite/native/Linux-Musl/**'
    exclude 'org/sqlite/native/Linux-Android/**'
    exclude 'org/sqlite/native/Windows/aarch64/**'
    exclude 'org/sqlite/native/Windows/x86/**'
    configurations = [project.configurations.runtimeClasspath, project.configurations.shadow]
    manifest {
        attributes 'Main-Class': 'com.blck.MusicReleaseTracker.Main'
    }
    mergeServiceFiles()
}

test {
    useJUnitPlatform()
}

